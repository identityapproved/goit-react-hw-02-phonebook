{"version":3,"sources":["Components/ContactsForm/ContactsForm.styled.js","Components/ContactsForm/ContactsForm.js","Components/ContactsListItem/ContactsListItem.styled.js","Components/ContactsListItem/ContactsListItem.js","Components/ContactsList/ContactsList.styled.js","Components/ContactsList/ContactsList.js","Components/Container/Container.styled.js","Components/Container/Container.js","Components/Filter/Filter.styled.js","Components/Filter/Filter.js","Components/App/App.js","constants/theme.js","index.js"],"names":["Form","styled","form","Label","label","props","theme","colors","primaryText","Input","input","FormBtn","button","secondaryText","black","shId","shortid","generate","ContactsForm","state","name","number","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","addContact","id","reset","onSubmit","this","type","pattern","title","onChange","required","Component","ListItem","li","Item","span","DeleteBtn","ContactsListItem","remove","onClick","List","ul","ContactsList","contacts","map","SectionMain","section","SectionTitle","h2","Container","children","Filter","App","filter","contact","find","toLowerCase","alert","prev","removeContact","onChangeFilter","currentTarget","getFilteredContacts","normalizedFilter","includes","Object","freeze","white","green","red","blue","spacing","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.575073c6.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nexport const Input = styled.input`\n  border-radius: 5px;\n  margin-left: 10px;\n`;\n\nexport const FormBtn = styled.button`\n  margin: 10px;\n  border: ${props => `1px solid ${props.theme.colors.secondaryText}`};\n  border-radius: 23px;\n  cursor: pointer;\n  padding: 12px 24px;\n  color: ${props => `${props.theme.colors.black}`};\n  transition: all 250ms ease-in;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import React, { Component } from 'react';\nimport { Form, FormBtn, Input, Label } from './ContactsForm.styled';\nimport shortid from 'shortid';\n\nconst shId = shortid.generate();\n\nexport default class ContactsForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onHandleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onHandleSubmit = e => {\n    e.preventDefault();\n    const { addContact } = this.props;\n    addContact({ ...this.state, id: shId });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.onHandleSubmit}>\n        <Label>\n          Name:\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            onChange={this.onHandleChange}\n            value={this.state.name}\n            required\n          />\n        </Label>\n        <Label>\n          Phone:\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер должен состоять цифр, и может содержать пробелы, тире, круглые скобки и может начинаться с +.\"\n            onChange={this.onHandleChange}\n            value={this.state.number}\n            required\n          />\n        </Label>\n        <FormBtn type=\"submit\">Add</FormBtn>\n      </Form>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 5px;\n  /* border: ${props => `1px solid ${props.theme.colors.secondaryText}`}; */\n`;\n\nexport const Item = styled.span`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.2;\n  color: ${props => `${props.theme.colors.secondaryText}`};\n`;\n\nexport const DeleteBtn = styled.button`\n  margin: 10px;\n  border: 1px solid grey;\n  border-radius: 23px;\n  padding: 12px 24px;\n  color: ${props => `${props.theme.colors.black}`};\n  transition: all 250ms ease-in;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { DeleteBtn, Item, ListItem } from './ContactsListItem.styled';\n\nexport const ContactsListItem = ({ id, name, number, remove }) => {\n  return (\n    <ListItem>\n      <Item>{name}</Item>\n      <Item>{number}</Item>\n      <DeleteBtn type=\"button\" onClick={() => remove(id)}>\n        remove\n      </DeleteBtn>\n    </ListItem>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n","import { ContactsListItem } from 'Components/ContactsListItem/ContactsListItem';\nimport { List } from './ContactsList.styled';\n\nexport const ContactsList = ({ contacts, remove }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => (\n      <ContactsListItem key={id} id={id} name={name} number={number} remove={remove} />\n    ))}\n  </List>\n);\n","import styled from '@emotion/styled';\n\nexport const SectionMain = styled.section`\n  margin: 0 auto;\n  align-items: center;\n  text-align: center;\n  padding: 10vh 0;\n  border: ${props => `1px solid ${props.theme.colors.secondaryText}`};\n`;\n\nexport const SectionTitle = styled.h2`\n  padding: 5px;\n  font-weight: 900;\n  font-size: 16px;\n  line-height: 1.36;\n  letter-spacing: 0.06em;\n  color: ${props => `${props.theme.colors.primaryText}`};\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionMain, SectionTitle } from './Container.styled';\n\nexport const Container = ({ children, title }) => {\n  return (\n    <SectionMain>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionMain>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-weight: 700;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nexport const Input = styled.input`\n  border-radius: 5px;\n  margin-left: 10px;\n`;\n","import { Input, Label } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Filter:\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import ContactsForm from 'Components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'Components/ContactsList/ContactsList';\nimport { Container } from 'Components/Container/Container';\nimport { Filter } from 'Components/Filter/Filter';\nimport React, { Component } from 'react';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = contact => {\n    const addingContact = this.state.contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n    );\n    if (addingContact) {\n      alert(`${contact.name} is already in contacts`);\n    }\n\n    this.setState(prev => ({ contacts: [...prev.contacts, contact] }));\n  };\n\n  removeContact = id => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  onChangeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n  };\n\n  render() {\n    return (\n      <>\n        <Container title=\"Phonebook\">\n          <ContactsForm addContact={this.addContact} />\n        </Container>\n\n        <Container title=\"Contacts\">\n          <Filter onChange={this.onChangeFilter} value={this.state.filter} />\n          <ContactsList contacts={this.getFilteredContacts()} remove={this.removeContact} />\n        </Container>\n      </>\n    );\n  }\n}\n","export const theme = Object.freeze({\n  colors: {\n    white: '#ffffff',\n    black: '#010101',\n    green: '#4caf50',\n    red: '#f44336',\n    blue: '#2196f3',\n    primaryText: '#212121',\n    secondaryText: '#757575',\n  },\n  spacing: value => `${4 * value}px`,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from 'constants/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}